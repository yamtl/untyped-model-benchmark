plugins {
	id "org.xtext.xtend" version "3.0.2"
	id 'java'
	id 'eclipse'
	id 'idea'
	id 'application'
	id 'java-library-distribution'
}


group 'yamtl'

ext {
//	className = 'cd2db_zoo_yamtl.BenchmarkDriver_cd2db'
//	className = 'cd2db_zoo_yamtl_untyped.BenchmarkDriver_cd2db_untypedModel'
//className= 'CSV_to_healthTracker.BenchmarkDriver_csv_untypedModel_helper'
	className= 'CSV_to_healthTracker.BenchmarkDriver_csv_jackson'
}

application {
	mainClass = "${className}"
}


eclipse {
	project {
	  name = 'untyped-model-benchmark'
	  buildCommand 'org.eclipse.jdt.core.javabuilder'
	  buildCommand 'org.eclipse.ajdt.core.ajbuilder'
	  buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
	  buildCommand 'org.eclipse.wst.common.project.facet.core.builder'
	  buildCommand 'org.eclipse.m2m.atl.adt.builder.atlBuilder'

	  natures 'org.eclipse.jdt.core.javanature',
		'org.eclipse.buildship.core.gradleprojectnature',
		'org.eclipse.wst.common.project.facet.core.nature',
		'org.eclipse.xtext.ui.shared.xtextNature',
		'org.eclipse.pde.PluginNature',
		'org.eclipse.m2m.atl.adt.builder.atlNature'
	}
}

repositories {
//	maven {
//		url "https://github.com/yamtl/yamtl.github.io/raw/mvn-repo/mvn-repo/snapshot-repo"
//	}
	mavenLocal()
	mavenCentral()
	
}


ext {
	yamtlVersion = '0.3.0'
	xtendVersion = '2.29.0'
	commonsioVersion = '2.11.0'
	emfChangeVersion = '2.14.0' 
	ecoreVersion = '2.17.0'
	aspectJVersion = '1.9.9.1'
}


// ASPECTJ
configurations {
	ajc
	aspects
	aspectCompile
	ajInpath
	implementation {
		extendsFrom aspects
	}
}

// XTEND: configures output directories for generated java
xtend {
	sourceSets {
		main.xtendOutputDir = 'src/main/xtend-gen'
		test.xtendOutputDir = 'src/test/xtend-gen'
	}
}


sourceSets {
	main {
		java {
			srcDirs = [
				'src/main/java',
				'src/main/emf-gen',
				'src/main/xtend-gen'
			]
		}
	}
	test {
		java {
			srcDir 'src/test/xtend-gen'
		}
	}
}

dependencies {
	implementation "org.eclipse.emf:org.eclipse.emf.ecore.xmi:$ecoreVersion"
	implementation "org.eclipse.emf:org.eclipse.emf.ecore.change:$emfChangeVersion"
	implementation "org.eclipse.xtend:org.eclipse.xtend.core:$xtendVersion"
	implementation "yamtl:yamtl:${yamtlVersion}"
	
	// bindingSource
	implementation 'org.apache.commons:commons-math3:3.6.1'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.14.2'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.14.2'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
	implementation "org.apache.groovy:groovy-all:4.0.6"
	
		// FileUtils
	implementation group: 'commons-io', name: 'commons-io', version: "$commonsioVersion"
	implementation group: 'net.sourceforge.plantuml', name: 'plantuml', version: '8059'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'org.apache.commons:commons-text:1.10.0' // uncapitalize
	
	// DEBUGGING
	// AspectJ
	ajc "org.aspectj:aspectjtools:$aspectJVersion"
	implementation("org.aspectj:aspectjrt:$aspectJVersion")
	implementation("org.aspectj:aspectjweaver:$aspectJVersion")
	ajInpath "org.eclipse.emf:org.eclipse.emf.ecore:2.11+"
	
	
	// benchmark
	implementation 'com.google.guava:guava-testlib:31.1-jre'

}

// create a single Jar with all dependencies
// source: https://www.mkyong.com/gradle/gradle-create-a-jar-file-with-dependencies/
task fatJar(type: Jar) {
	manifest {
		attributes 'LiveContestDriver': 'YAMTL solution',
			'Implementation-Version': '0.0.1',
			'Main-Class': "${className}"
	}
	// remove signatures as we are not signing this jar to avoid security warnings
	exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
	baseName = project.name + '-all'
	from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
}

tasks.withType(Jar).all {
	duplicatesStrategy 'include'
}


distributions {
	main {
		distributionBaseName = 'cd2db_typed'
		contents {
			from 'dist'
		}
	}
}
